import asyncio
import logging
from datetime import datetime

from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from aiogram.filters.command import Command
from aiogram.fsm.storage.redis import DefaultKeyBuilder, RedisStorage
from aiogram_dialog import setup_dialogs
from redis.asyncio.client import Redis

import settings
from routers import admin, student, tutor
from shared import Role, format_symbols, get_role, get_timetable
from utils import compare_date_str_to_now


async def register_chat(message: types.Message):
    '''—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–æ—Ç–µ'''
    role = await get_role(message, True)
    if role:
        await message.answer("–ü—Ä–∏–≤–µ—Çüëã! –Ø –±–æ—Ç –¥–ª—è –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ–≥–æ <b><i>–ö—É—Ä—Å–∞ –ø–æ –§–∏–≥–º–µ</i></b>üî•!", parse_mode=ParseMode.HTML)
        await message.answer_sticker(sticker='CAACAgIAAxkBAAIFG2aNBoXibOmgdbZig7Kmjjl9uB1NAALyEgAC8aOgSNoW844h2hMwNQQ')
    else:
        return

    if role == Role.STUDENT.value:
        await message.answer("–¢—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –Ω–∞ –∫—É—Ä—Åü§©! "
                             "–í –ø—Ä–æ—Ü–µ—Å—Å–µ –∫—É—Ä—Å–∞ —Ç—ã –±—É–¥–µ—à—å –∫–∏–¥–∞—Ç—å –º–Ω–µ –¥–æ–º–∞—à–∫–∏)\n\n"
                             "–ê –≤–æ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª–µ–∑–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n"
                             "/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥‚ùì\n"
                             "/faq - –æ—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã‚ùóÔ∏è\n"
                             "/timetable - –¥–µ–¥–ª–∞–π–Ω—ã –¥–æ–º–∞—à–µ–∫üïî\n"
                             "/sendhw - —Ç–≤–æ—è <b>—Å–∞–º–∞—è –≤–∞–∂–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞</b>, –∫–æ–≥–¥–∞ –ø—Ä–∏–¥—ë—Ç –≤—Ä–µ–º—è <b>—Å–¥–∞–≤–∞—Ç—å –¥–∑</b>‚ò∫Ô∏è\n"
                             "/leave - –∏—Å–∫–ª—é—á–∏—Ç—å —Å–µ–±—è –∏–∑ –∫—É—Ä—Å–∞‚ö†Ô∏è",
                             parse_mode=ParseMode.HTML)
        await message.answer(f"–¢–∞–∫–∂–µ –Ω–µ –∑–∞–±—ã–≤–∞–π, —á—Ç–æ –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫—É—Ä—Å—É –±—É–¥–µ—Ç –≤—ã–∫–ª–∞–¥—ã–≤–∞—Ç—å—Å—è "
                             f'–≤ <a href="{settings.CHANNEL_LINK}">–∫–∞–Ω–∞–ª–µ</a>! –ê –≤ <a href="{settings.CHAT_LINK}">—á–∞—Ç–µ</a> '
                             f"–º–æ–∂–Ω–æ –∑–∞–¥–∞–≤–∞—Ç—å —Å–≤–æ–∏ –≤–æ–ø—Ä–æ—Å—ã –∏ –æ–±—â–∞—Ç—å—Å—èüòÅ", parse_mode=ParseMode.HTML)
    elif role == Role.TUTOR.value:
        await message.answer("–¢–≤–æ—è —Ä–æ–ª—å –Ω–∞ –∫—É—Ä—Å–µ: <b>–º–µ–Ω—Ç–æ—Ä</b>ü§ì\n\n"
                             "–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n"
                             "/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥‚ùì\n"
                             "/timetable - –¥–µ–¥–ª–∞–π–Ω—ã –¥–æ–º–∞—à–µ–∫üïî\n"
                             "/students - –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ–π —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, —á—å–∏ –¥–∑ —Ç—ã –±—É–¥–µ—à—å –ø—Ä–æ–≤–µ—Ä—è—Ç—å\n"
                             "/checkhw - <b>–æ—Å–Ω–æ–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∑</b>‚úÖ\n"
                             "/statistics <i>&lt;—á–∏—Å–ª–æ&gt;</i> - –ø–æ–ª—É—á–∏—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ (–Ω–µ –±–æ–ª—å—à–µ 20) "
                             "—Å–≤–æ–∏—Ö –ª—É—á—à–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (—É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –¥–∑)\n"
                             "/expel - –∏—Å–∫–ª—é—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–∑ –∫—É—Ä—Å–∞‚ö†Ô∏è\n\n"
                             f'–ì—É–≥–ª —Ç–∞–±–ª–∏—Ü–∞ —Å –æ—Ü–µ–Ω–∫–∞–º–∏ –∏ –¥–∞–Ω–Ω—ã–º–∏ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫—É—Ä—Å–∞: <a href="{settings.TABLE_LINK}">—Ç—ã–∫</a>',
                             parse_mode=ParseMode.HTML, disable_web_page_preview=True)
    elif role == Role.ADMIN.value:
        await message.answer("–¢–≤–æ—è —Ä–æ–ª—å –Ω–∞ –∫—É—Ä—Å–µ: <b>–∞–¥–º–∏–Ω</b>.", parse_mode=ParseMode.HTML)
    elif role is not None:
        await message.answer(f"–¢—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –Ω–æ —è –≤—Å—ë —Ä–∞–≤–Ω–æ —Ç–µ–±—è –Ω–µ —É–∑–Ω–∞—éüò≥. –ù–∞–ø–∏—à–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ {settings.ADMIN}.")


async def get_help(message: types.Message):
    role = await get_role(message)
    if role == Role.STUDENT.value:
        await message.answer("/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥‚ùì\n"
                             "/faq - –æ—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã‚ùóÔ∏è\n"
                             "/timetable - –¥–µ–¥–ª–∞–π–Ω—ã –¥–æ–º–∞—à–µ–∫üïî\n"
                             "/sendhw - —Ç–≤–æ—è <b>—Å–∞–º–∞—è –≤–∞–∂–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞</b>, –∫–æ–≥–¥–∞ –ø—Ä–∏–¥—ë—Ç –≤—Ä–µ–º—è <b>—Å–¥–∞–≤–∞—Ç—å –¥–∑</b>‚ò∫Ô∏è\n"
                             "/leave - –∏—Å–∫–ª—é—á–∏—Ç—å —Å–µ–±—è –∏–∑ –∫—É—Ä—Å–∞‚ö†Ô∏è",
                             parse_mode=ParseMode.HTML)
    elif role == Role.TUTOR.value:
        await message.answer("/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n"
                             "/timetable - –¥–µ–¥–ª–∞–π–Ω—ã –¥–æ–º–∞—à–µ–∫\n"
                             "/students - –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ–π —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, —á—å–∏ –¥–∑ —Ç—ã –±—É–¥–µ—à—å –ø—Ä–æ–≤–µ—Ä—è—Ç—å\n"
                             "/checkhw - <b>–æ—Å–Ω–æ–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∑</b>\n"
                             "/statistics <i>&lt;—á–∏—Å–ª–æ&gt;</i> - –ø–æ–ª—É—á–∏—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ (–Ω–µ –±–æ–ª—å—à–µ 20) "
                             "—Å–≤–æ–∏—Ö –ª—É—á—à–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (—É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –¥–∑)\n"
                             "/expel - –∏—Å–∫–ª—é—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–∑ –∫—É—Ä—Å–∞‚ö†Ô∏è\n",
                             parse_mode=ParseMode.HTML)
    elif role == Role.ADMIN.value:
        await message.answer("–¢–≤–æ—è —Ä–æ–ª—å –Ω–∞ –∫—É—Ä—Å–µ: <b>–∞–¥–º–∏–Ω</b>.", parse_mode=ParseMode.HTML)
    elif role is not None:
        await message.answer(f"–¢—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –Ω–æ —è –Ω–µ –ø–æ–Ω–∏–º–∞—é –∫—Ç–æ —Ç—ãüò≥. –ù–∞–ø–∏—à–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ {settings.ADMIN}.")


async def get_whoami(message: types.Message):
    role = await get_role(message)
    if role == Role.ADMIN.value:
        await message.answer("<b>–∞–¥–º–∏–Ω</b>", parse_mode=ParseMode.HTML)
    elif role == Role.TUTOR.value:
        await message.answer("<b>–º–µ–Ω—Ç–æ—Ä</b>", parse_mode=ParseMode.HTML)
    elif role == Role.STUDENT.value:
        await message.answer("<b>—Å—Ç—É–¥–µ–Ω—Ç</b>", parse_mode=ParseMode.HTML)
    elif role is not None:
        await message.answer(f"–¢—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –Ω–æ —è –Ω–µ –ø–æ–Ω–∏–º–∞—é –∫—Ç–æ —Ç—ãüò≥. –ù–∞–ø–∏—à–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ {settings.ADMIN}.")


async def get_faq(message: types.Message):
    await message.answer(settings.FAQ_URL)


async def get_curs_progress(message: types.Message):
    role = await get_role(message)
    if role is None:
        return

    tasks = await get_timetable(message)
    if tasks is None:
        return

    timetable = []
    for task in tasks:
        if compare_date_str_to_now(task['start_date']) <= 0:
            start_date = datetime.strptime(task['start_date'], '%Y-%m-%d')
            end_date = datetime.strptime(task['end_date'], '%Y-%m-%d')
            timetable.append(f"{format_symbols[task['id']]}: —Å {start_date.month:02}.{start_date.day:02} "
                             f"–ø–æ {end_date.month:02}.{end_date.day:02}")
    await message.answer("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–æ–º–∞—à–µ–∫üïî\n\n" + '\n'.join(timetable))


async def main():
    logging.basicConfig(
        level=logging.INFO,
        format="%(asctime)s [%(levelname)s] %(message)s",
        handlers=[
            logging.StreamHandler()
        ]
    )
    bot = Bot(token=settings.TOCKEN)

    storage = RedisStorage(
        Redis.from_url(url=settings.REDIS_URL),
        key_builder=DefaultKeyBuilder(with_destiny=True),
    )
    dp = Dispatcher(storage=storage)

    dp.message.register(register_chat, Command("start"))
    dp.message.register(get_help, Command("help"))
    dp.message.register(get_whoami, Command("whoami"))
    dp.message.register(get_faq, Command("faq"))
    dp.message.register(get_curs_progress, Command("timetable"))

    dp.include_routers(admin.router, student.router, tutor.router)
    setup_dialogs(dp)

    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
